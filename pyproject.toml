[tool.poetry]
name = "compare-regions-jp"
version = "0.1.0"
description = "日本の地域を複数観点から比較し、差異をMarkdown形式でレポートするCLIツール"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/your-username/compare-regions-jp"
repository = "https://github.com/your-username/compare-regions-jp"
keywords = ["geospatial", "comparison", "cli", "japan"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.12"
click = "^8.1.0"
geopandas = "^0.14.0"
osmnx = "^1.6.0"
requests = "^2.31.0"
jinja2 = "^3.1.0"
rich = "^13.7.0"
pydantic = "^2.5.0"
joblib = "^1.3.0"
shapely = "^2.0.0"
pyproj = "^3.6.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-describe = "^2.2.0"
black = "^23.0.0"
ruff = "^0.1.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
ipython = "^8.0.0"
types-requests = "^2.31.0"

[tool.poetry.scripts]
compare-regions-jp = "compare_regions_jp.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# === 開発ツール設定 ===

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
select = [
    "F",   # Pyflakes
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "D400", # First line should end with a period
    "D415", # First line should end with a period, question mark, or exclamation point
    "E501", # Line too long (conflicts with black)
]
line-length = 88
target-version = "py312"

[tool.ruff.per-file-ignores]
"tests/*" = ["D", "N", "E501"]  # テストファイルはdocstring・命名規則・行長制限緩和

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
no_implicit_reexport = true
warn_redundant_casts = true
warn_unused_ignores = true
exclude = ["tests/"]

# 地理空間ライブラリは型情報が不完全
[[tool.mypy.overrides]]
module = [
    "geopandas.*",
    "osmnx.*",
    "shapely.*",
    "pyproj.*",
    "joblib.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/compare_regions_jp",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=85",
    "--strict-markers",
    "--disable-warnings",
    "-v"
]
markers = [
    "slow: 時間のかかるテスト（外部API呼び出し等）",
    "integration: 統合テスト",
    "unit: ユニットテスト",
    "network: ネットワーク接続が必要なテスト"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]
